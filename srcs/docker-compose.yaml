services:
  database:
    restart: always
    container_name: mariadb
    env_file: ".env"
    volumes:
      - mariadb:/var/lib/mysql
    networks:
      - database
    build:
      context: requirements/mariadb
      dockerfile: Dockerfile
    image: database
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "test", "-ptest", "--skip-ssl"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    pull_policy: never
  wordpress:
    restart: always
    container_name: 'wordpress'
    env_file: ".env"
    depends_on:
      database:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
        restart: true
    volumes:
      - wordpress:/var/www/html
    networks:
      - proxy
      - database
      - redis
    build:
      context: requirements/wordpress
      dockerfile: Dockerfile
    image: wordpress
    pull_policy: never
  nginx:
    restart: always
    env_file: ".env"
    ports:
      - '443:443'
    container_name: nginx
    networks:
      - proxy
      - adminer
    volumes:
      - wordpress:/var/www/html
    build:
      context: requirements/nginx
      dockerfile: Dockerfile
    image: nginx
    pull_policy: never
  ftp:
    restart: always
    ports:
      - "20:20"
      - "21:21"
      - "21100-21110:21100-21110"
    container_name: "ftp"
    build:
      context: requirements/ftp
      dockerfile: Dockerfile
    volumes:
      - wordpress:/var/www/html
    image: ftp
    pull_policy: never
  redis:
    container_name: "redis"
    env_file: ".env"
    restart: always
    networks:
      - redis
    build:
      context: requirements/redis
      dockerfile: Dockerfile
    image: redis
    pull_policy: never
  adminer:
    container_name: "adminer"
    env_file: ".env"
    restart: always
    build:
      context: requirements/adminer
      dockerfile: Dockerfile
    networks:
      - adminer
      - database
    image: adminer
    pull_policy: never
  kuma:
    container_name: "uptime_kuma"
    restart: always
    env_file: ".env"
    build:
      context: requirements/uptimekuma
      dockerfile: Dockerfile
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kuma:/uptime-kuma
    image: kuma
    pull_policy: never
  click:
    container_name: "clicker"
    restart: always
    build:
      context: requirements/click
      dockerfile: Dockerfile
    networks:
      - proxy
    image: click
    pull_policy: never
volumes:
  mariadb:
  wordpress:
  kuma:

networks:
  proxy:
    driver: bridge
  database:
    driver: bridge
  redis:
    driver: bridge
  adminer:
    driver: bridge
